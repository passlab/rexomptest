Libomptarget --> Loading RTLs...
Libomptarget --> Loading library 'libomptarget.rtl.ppc64.so'...
Libomptarget --> Unable to load library 'libomptarget.rtl.ppc64.so': libomptarget.rtl.ppc64.so: cannot open shared object file: No such file or directory!
Libomptarget --> Loading library 'libomptarget.rtl.x86_64.so'...
Libomptarget --> Successfully loaded library 'libomptarget.rtl.x86_64.so'!
Libomptarget --> Registering RTL libomptarget.rtl.x86_64.so supporting 4 devices!
Libomptarget --> Loading library 'libomptarget.rtl.cuda.so'...
Target CUDA RTL --> Start initializing CUDA
Libomptarget --> Successfully loaded library 'libomptarget.rtl.cuda.so'!
Libomptarget --> Registering RTL libomptarget.rtl.cuda.so supporting 4 devices!
Libomptarget --> Loading library 'libomptarget.rtl.aarch64.so'...
Libomptarget --> Unable to load library 'libomptarget.rtl.aarch64.so': libomptarget.rtl.aarch64.so: cannot open shared object file: No such file or directory!
Libomptarget --> RTLs loaded!
Libomptarget --> Image 0x0000000000400c70 is NOT compatible with RTL libomptarget.rtl.x86_64.so!
Libomptarget --> Image 0x0000000000400c70 is compatible with RTL libomptarget.rtl.cuda.so!
Libomptarget --> RTL 0x000000000163abe0 has index 0!
Libomptarget --> Registering image 0x0000000000400c70 with RTL libomptarget.rtl.cuda.so!
Libomptarget --> Done registering entries!
Libomptarget --> Call to omp_get_num_devices returning 4
Libomptarget --> Default TARGET OFFLOAD policy is now mandatory (devices were found)
Libomptarget --> Entering target region with entry point 0x0000000000400b9c and device Id -1
Libomptarget --> Checking whether device 0 is ready.
Libomptarget --> Is the device 0 (local ID 0) initialized? 0
Target CUDA RTL --> Init requires flags to 1
Target CUDA RTL --> Getting device 0
Target CUDA RTL --> Max CUDA blocks per grid 2147483647 exceeds the hard team limit 65536, capping at the hard limit
Target CUDA RTL --> Using 1024 CUDA threads per block
Target CUDA RTL --> Max number of CUDA blocks 65536, threads 1024 & warp size 32
Target CUDA RTL --> Default number of teams set according to library's default 128
Target CUDA RTL --> Default number of threads set according to library's default 128
Libomptarget --> Device 0 is ready to use.
Target CUDA RTL --> Load data from image 0x0000000000400c70
Target CUDA RTL --> CUDA module successfully loaded!
Target CUDA RTL --> Entry point 0x0000000000000000 maps to __omp_offloading_fd00_61254ba_main_l14 (0x0000000001b1ce20)
Target CUDA RTL --> Sending global device environment data 4 bytes
Libomptarget --> Entry  0: Base=0x00007ffd4a51342c, Begin=0x00007ffd4a51342c, Size=4, Type=0x21
Libomptarget --> Entry  1: Base=0x00007ffd4a513428, Begin=0x00007ffd4a513428, Size=4, Type=0x22
Libomptarget --> Entry  2: Base=0x00007ffd4a513424, Begin=0x00007ffd4a513424, Size=4, Type=0x23
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a51342c, Size=4)...
Libomptarget --> Creating new map entry: HstBase=0x00007ffd4a51342c, HstBegin=0x00007ffd4a51342c, HstEnd=0x00007ffd4a513430, TgtBegin=0x0000004200a20000
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20000 - is new
Libomptarget --> Moving 4 bytes (hst:0x00007ffd4a51342c) -> (tgt:0x0000004200a20000)
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a513428, Size=4)...
Libomptarget --> Creating new map entry: HstBase=0x00007ffd4a513428, HstBegin=0x00007ffd4a513428, HstEnd=0x00007ffd4a51342c, TgtBegin=0x0000004200a20200
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20200 - is new
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a513424, Size=4)...
Libomptarget --> Creating new map entry: HstBase=0x00007ffd4a513424, HstBegin=0x00007ffd4a513424, HstEnd=0x00007ffd4a513428, TgtBegin=0x0000004200a20400
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20400 - is new
Libomptarget --> Moving 4 bytes (hst:0x00007ffd4a513424) -> (tgt:0x0000004200a20400)
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a51342c, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffd4a51342c, TgtPtrBegin=0x0000004200a20000, Size=4, RefCount=1
Libomptarget --> Obtained target argument 0x0000004200a20000 from host pointer 0x00007ffd4a51342c
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a513428, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffd4a513428, TgtPtrBegin=0x0000004200a20200, Size=4, RefCount=1
Libomptarget --> Obtained target argument 0x0000004200a20200 from host pointer 0x00007ffd4a513428
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a513424, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffd4a513424, TgtPtrBegin=0x0000004200a20400, Size=4, RefCount=1
Libomptarget --> Obtained target argument 0x0000004200a20400 from host pointer 0x00007ffd4a513424
Libomptarget --> Launching target execution __omp_offloading_fd00_61254ba_main_l14 with pointer 0x0000000001ae9aa0 (index=0).
Target CUDA RTL --> Setting CUDA threads per block to default 128
Target CUDA RTL --> Using requested number of teams 1
Target CUDA RTL --> Launch kernel with 1 blocks and 128 threads
Target CUDA RTL --> Launch of entry point at 0x0000000001ae9aa0 successful!
Test0 4, 6, 8.
Test1 4, 0, 8.
Test1 4, 0, 8.
Test1 4, 0, 8.
Test2 40, 60, 80.
Test2 40, 60, 80.
Test2 40, 60, 80.
Target CUDA RTL --> Kernel execution at 0x0000000001ae9aa0 successful!
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a513424, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffd4a513424, TgtPtrBegin=0x0000004200a20400, Size=4, updated RefCount=1
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20400 - is last
Libomptarget --> Moving 4 bytes (tgt:0x0000004200a20400) -> (hst:0x00007ffd4a513424)
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a513424, Size=4)...
Libomptarget --> Deleting tgt data 0x0000004200a20400 of size 4
Libomptarget --> Removing mapping with HstPtrBegin=0x00007ffd4a513424, TgtPtrBegin=0x0000004200a20400, Size=4
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a513428, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffd4a513428, TgtPtrBegin=0x0000004200a20200, Size=4, updated RefCount=1
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20200 - is last
Libomptarget --> Moving 4 bytes (tgt:0x0000004200a20200) -> (hst:0x00007ffd4a513428)
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a513428, Size=4)...
Libomptarget --> Deleting tgt data 0x0000004200a20200 of size 4
Libomptarget --> Removing mapping with HstPtrBegin=0x00007ffd4a513428, TgtPtrBegin=0x0000004200a20200, Size=4
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a51342c, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffd4a51342c, TgtPtrBegin=0x0000004200a20000, Size=4, updated RefCount=1
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20000 - is last
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffd4a51342c, Size=4)...
Libomptarget --> Deleting tgt data 0x0000004200a20000 of size 4
Libomptarget --> Removing mapping with HstPtrBegin=0x00007ffd4a51342c, TgtPtrBegin=0x0000004200a20000, Size=4
Test3 4, 60, 80.
Libomptarget --> Unloading target library!
Libomptarget --> Image 0x0000000000400c70 is compatible with RTL 0x000000000163abe0!
Libomptarget --> Unregistered image 0x0000000000400c70 from RTL 0x000000000163abe0!
Libomptarget --> Done unregistering images!
Libomptarget --> Removing translation table for descriptor 0x00000000004143e0
Libomptarget --> Done unregistering library!
