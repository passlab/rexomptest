Libomptarget --> Loading RTLs...
Libomptarget --> Loading library 'libomptarget.rtl.ppc64.so'...
Libomptarget --> Unable to load library 'libomptarget.rtl.ppc64.so': libomptarget.rtl.ppc64.so: cannot open shared object file: No such file or directory!
Libomptarget --> Loading library 'libomptarget.rtl.x86_64.so'...
Libomptarget --> Successfully loaded library 'libomptarget.rtl.x86_64.so'!
Libomptarget --> Registering RTL libomptarget.rtl.x86_64.so supporting 4 devices!
Libomptarget --> Loading library 'libomptarget.rtl.cuda.so'...
Target CUDA RTL --> Start initializing CUDA
Libomptarget --> Successfully loaded library 'libomptarget.rtl.cuda.so'!
Libomptarget --> Registering RTL libomptarget.rtl.cuda.so supporting 4 devices!
Libomptarget --> Loading library 'libomptarget.rtl.aarch64.so'...
Libomptarget --> Unable to load library 'libomptarget.rtl.aarch64.so': libomptarget.rtl.aarch64.so: cannot open shared object file: No such file or directory!
Libomptarget --> RTLs loaded!
Libomptarget --> Image 0x000000000101e0b0 is NOT compatible with RTL libomptarget.rtl.x86_64.so!
Libomptarget --> Image 0x000000000101e0b0 is compatible with RTL libomptarget.rtl.cuda.so!
Libomptarget --> RTL 0x0000000001032220 has index 0!
Libomptarget --> Registering image 0x000000000101e0b0 with RTL libomptarget.rtl.cuda.so!
Libomptarget --> Done registering entries!
Libomptarget --> Call to omp_get_num_devices returning 4
Libomptarget --> Default TARGET OFFLOAD policy is now mandatory (devices were found)
Libomptarget --> Entering target region with entry point 0x0000000000001f7c and device Id 0
Libomptarget --> Checking whether device 0 is ready.
Libomptarget --> Is the device 0 (local ID 0) initialized? 0
Target CUDA RTL --> Init requires flags to 0
Target CUDA RTL --> Getting device 0
Target CUDA RTL --> Max CUDA blocks per grid 2147483647 exceeds the hard team limit 65536, capping at the hard limit
Target CUDA RTL --> Using 1024 CUDA threads per block
Target CUDA RTL --> Max number of CUDA blocks 65536, threads 1024 & warp size 32
Target CUDA RTL --> Default number of teams set according to library's default 128
Target CUDA RTL --> Default number of threads set according to library's default 128
Libomptarget --> Device 0 is ready to use.
Target CUDA RTL --> Load data from image 0x000000000101e0b0
Target CUDA RTL --> CUDA module successfully loaded!
Target CUDA RTL --> Entry point 0x0000000000000000 maps to OUT__1__8060__main__15__kernel__ (0x00000000014e5120)
Target CUDA RTL --> Sending global device environment data 4 bytes
Libomptarget --> Entry  0: Base=0x00007ffcf4cfe768, Begin=0x00007ffcf4cfe768, Size=4, Type=0x21
Libomptarget --> Entry  1: Base=0x00007ffcf4cfe764, Begin=0x00007ffcf4cfe764, Size=4, Type=0x22
Libomptarget --> Entry  2: Base=0x00007ffcf4cfe760, Begin=0x00007ffcf4cfe760, Size=4, Type=0x23
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe768, Size=4)...
Libomptarget --> Creating new map entry: HstBase=0x00007ffcf4cfe768, HstBegin=0x00007ffcf4cfe768, HstEnd=0x00007ffcf4cfe76c, TgtBegin=0x0000004200a20000
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20000 - is new
Libomptarget --> Moving 4 bytes (hst:0x00007ffcf4cfe768) -> (tgt:0x0000004200a20000)
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe764, Size=4)...
Libomptarget --> Creating new map entry: HstBase=0x00007ffcf4cfe764, HstBegin=0x00007ffcf4cfe764, HstEnd=0x00007ffcf4cfe768, TgtBegin=0x0000004200a20200
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20200 - is new
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe760, Size=4)...
Libomptarget --> Creating new map entry: HstBase=0x00007ffcf4cfe760, HstBegin=0x00007ffcf4cfe760, HstEnd=0x00007ffcf4cfe764, TgtBegin=0x0000004200a20400
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20400 - is new
Libomptarget --> Moving 4 bytes (hst:0x00007ffcf4cfe760) -> (tgt:0x0000004200a20400)
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe768, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffcf4cfe768, TgtPtrBegin=0x0000004200a20000, Size=4, RefCount=1
Libomptarget --> Obtained target argument 0x0000004200a20000 from host pointer 0x00007ffcf4cfe768
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe764, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffcf4cfe764, TgtPtrBegin=0x0000004200a20200, Size=4, RefCount=1
Libomptarget --> Obtained target argument 0x0000004200a20200 from host pointer 0x00007ffcf4cfe764
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe760, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffcf4cfe760, TgtPtrBegin=0x0000004200a20400, Size=4, RefCount=1
Libomptarget --> Obtained target argument 0x0000004200a20400 from host pointer 0x00007ffcf4cfe760
Libomptarget --> Launching target execution OUT__1__8060__main__15__kernel__ with pointer 0x00000000014dfe80 (index=0).
Target CUDA RTL --> Setting CUDA threads per block to requested 256
Target CUDA RTL --> Using requested number of teams 1024
Target CUDA RTL --> Launch kernel with 1024 blocks and 256 threads
Target CUDA RTL --> Launch of entry point at 0x00000000014dfe80 successful!
Test0 4, 6, 8.
Test1 10616832, 10617344, 10617856.
Test1 10616832, 10617344, 10617856.
Test1 10616832, 10617344, 10617856.
Test2 40, 60, 80.
Test2 40, 60, 80.
Test2 40, 60, 80.
Target CUDA RTL --> Kernel execution at 0x00000000014dfe80 successful!
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe760, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffcf4cfe760, TgtPtrBegin=0x0000004200a20400, Size=4, updated RefCount=1
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20400 - is last
Libomptarget --> Moving 4 bytes (tgt:0x0000004200a20400) -> (hst:0x00007ffcf4cfe760)
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe760, Size=4)...
Libomptarget --> Deleting tgt data 0x0000004200a20400 of size 4
Libomptarget --> Removing mapping with HstPtrBegin=0x00007ffcf4cfe760, TgtPtrBegin=0x0000004200a20400, Size=4
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe764, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffcf4cfe764, TgtPtrBegin=0x0000004200a20200, Size=4, updated RefCount=1
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20200 - is last
Libomptarget --> Moving 4 bytes (tgt:0x0000004200a20200) -> (hst:0x00007ffcf4cfe764)
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe764, Size=4)...
Libomptarget --> Deleting tgt data 0x0000004200a20200 of size 4
Libomptarget --> Removing mapping with HstPtrBegin=0x00007ffcf4cfe764, TgtPtrBegin=0x0000004200a20200, Size=4
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe768, Size=4)...
Libomptarget --> Mapping exists with HstPtrBegin=0x00007ffcf4cfe768, TgtPtrBegin=0x0000004200a20000, Size=4, updated RefCount=1
Libomptarget --> There are 4 bytes allocated at target address 0x0000004200a20000 - is last
Libomptarget --> Looking up mapping(HstPtrBegin=0x00007ffcf4cfe768, Size=4)...
Libomptarget --> Deleting tgt data 0x0000004200a20000 of size 4
Libomptarget --> Removing mapping with HstPtrBegin=0x00007ffcf4cfe768, TgtPtrBegin=0x0000004200a20000, Size=4
Libomptarget --> Unloading target library!
Libomptarget --> Image 0x000000000101e0b0 is compatible with RTL 0x0000000001032220!
Libomptarget --> Unregistered image 0x000000000101e0b0 from RTL 0x0000000001032220!
Libomptarget --> Done unregistering images!
Libomptarget --> Removing translation table for descriptor 0x0000000000602090
Libomptarget --> Done unregistering library!
Test3 4, 0, 8.
